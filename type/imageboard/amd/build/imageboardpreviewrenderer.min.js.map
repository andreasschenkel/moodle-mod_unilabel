{"version":3,"file":"imageboardpreviewrenderer.min.js","sources":["../src/imageboardpreviewrenderer.js"],"sourcesContent":["/**\n * Unilabel type imageboard\n *\n * @author      Andreas Schenkel\n * @copyright   Andreas Schenkel {@link https://github.com/andreasschenkel}\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Templates from 'core/templates';\nimport * as Str from 'core/str';\nimport log from 'core/log';\n\nexport const init = (canvaswidth, canvasheight, gridcolor, xsteps, ysteps) => {\n    canvaswidth = parseInt(canvaswidth, 10);\n    canvasheight = parseInt(canvasheight, 10);\n    xsteps = parseInt(xsteps, 10);\n    ysteps = parseInt(ysteps, 10);\n    registerAllEventlistener();\n    // Timeout notwendig, damit das Bild in der Draftarea \"vorhanden\" ist.\n    // document.querySelector('#id_unilabeltype_imageboard_backgroundimage_fieldset .filemanager-container .realpreview');\n    setTimeout(refreshBackgroundImage, 1000);\n    // To show all images on pageload.\n    setTimeout(refreshAllImages, 1000);\n    setTimeout(function() {\n        renderHelpergrid(canvaswidth, canvasheight, gridcolor, xsteps, ysteps);\n    }, 1000);\n\n    // In preview only ONE helpergrid exists with number 0...\n    const gridtoggler = document.getElementById(\"unilabeltype-imageboard-gridtoggler-0\");\n    const togglerText = gridtoggler.querySelector('.unilabeltype-imageboard-toggle-text');\n    gridtoggler.addEventListener(\"click\", function(event) {\n        const helpergrid = document.getElementById(\"unilabeltype-imageboard-helpergrid-0\");\n        event.stopPropagation();\n        event.preventDefault();\n        if (helpergrid.classList.contains(\"hidden\")) {\n            showGrid(togglerText, helpergrid);\n        } else {\n            hideGrid(togglerText, helpergrid);\n        }\n    });\n\n    /**\n     * Helper function to show the grid from imageboard.\n     *\n     * @param {object} button\n     * @param {object} helpergrid\n     */\n    function showGrid(button, helpergrid) {\n        helpergrid.classList.remove(\"hidden\");\n        button.value = 'gridvisible';\n        Str.get_string('buttonlabelhelpergridhide', 'unilabeltype_imageboard').done(function(text) {\n            button.innerText = text;\n        });\n    }\n\n    /**\n     * Helper function to remove the grid from imageboard.\n     *\n     * @param {object} button\n     * @param {object} helpergrid\n     */\n    function hideGrid(button, helpergrid) {\n        helpergrid.classList.add(\"hidden\");\n        button.value = 'gridhidden';\n        Str.get_string('buttonlabelhelpergridshow', 'unilabeltype_imageboard').done(function(text) {\n            button.innerText = text;\n        });\n    }\n\n    /**\n     * This function handles all focus out events if the event is from on of our input fields.\n     *\n     * @param {event} event\n     */\n    function focusoutExecute(event) {\n        console.log(\"focusoutExecute start\", event);\n        let imagenumber = -1;\n        // 1. Check where the focus out event was created form input or imagesetting input.\n        const eventid = event.target.getAttribute('id');\n        let eventsourceimagesetting = eventid.split(\"id-unilabeltype-imageboard-imagesettings-\")[1];\n        let eventsourceform = eventid.split(\"id_unilabeltype_imageboard_\")[1];\n\n        // ToDo:  Check if it is a focus out event has to be more precise ... Delete-Icon!!!!\n        if (typeof eventsourceimagesetting !== \"undefined\" || typeof eventsourceform !== \"undefined\") {\n            console.log(\"focusoutExecute\", event);\n            // 2. If ID starts with id_unilabeltype_imageboard_ then focus out came from form input fields.\n            if (typeof eventsourceimagesetting !== \"undefined\" && eventsourceimagesetting !== '') {\n                // Call updateForm and use as parameter the input field that should be updated in the form.\n                imagenumber = updateForm(eventsourceimagesetting);\n            }\n\n            // 3. If ID starts with id-unilabeltype-imageboard-imagesettings then focus out came from imagesettings.\n            if (typeof eventsourceform !== \"undefined\" && eventsourceform !== '') {\n                imagenumber = updateImagesetting(eventsourceform);\n            }\n\n            // Now we know which image was changed and we can refresh on or all images.\n            if (imagenumber >= 0) {\n                console.log(\"rufe refreshImage auf\", imagenumber);\n                refreshImage(imagenumber);\n            } else {\n                console.log(\"rufe ohne number auf\", imagenumber);\n                refreshAllImages();\n            }\n        }\n        console.log(\"focusoutExecute ende\");\n    }\n\n    /**\n     * Upates the input field in the mform\n     *\n     * @param {string} eventsourceimagesetting\n     * @returns {number}\n     */\n    function updateForm(eventsourceimagesetting) {\n        console.log(\"updateForm\");\n        const imagenumber = parseInt(document.getElementById('id-unilabeltype-imageboard-imagesettings-number').innerHTML) - 1;\n        let value = document.getElementById('id-unilabeltype-imageboard-imagesettings-' + eventsourceimagesetting).value;\n        console.log(\"value\", value);\n        // Check if the value should be integer.\n        if (eventsourceimagesetting === 'xposition' ||\n            eventsourceimagesetting === 'yposition' ||\n            eventsourceimagesetting === 'border' ||\n            eventsourceimagesetting === 'borderradius') {\n            let num = Number(value);\n            console.log(\"num\", num);\n            if (value !== '' && Number.isInteger(num)) {\n                console.log(\"value ist zahl\");\n            } else {\n                console.log(\"Fehlerhafte Eingabe ... Feld enth√§lt keine eindeutige Zahl\");\n                return -1;\n            }\n        }\n\n        let field = document.getElementById('id_unilabeltype_imageboard_' + eventsourceimagesetting + '_' + imagenumber);\n        console.log(\"field\", field);\n        if (field !== null) {\n            field.value = value;\n        }\n        return imagenumber;\n    }\n\n    /**\n     *\n     * @param {string} fieldtochange\n     */\n    function updateImagesetting(fieldtochange) {\n        console.log(\"updateImagesetting\", fieldtochange);\n        let changedvalue = document.getElementById('id_unilabeltype_imageboard_' + fieldtochange).value;\n\n        console.log(\"changedvalue\", changedvalue);\n        let fieldtochangeminusnumber = fieldtochange.substr(0, fieldtochange.length - 2);\n        let imagenumber = fieldtochange.substr(fieldtochange.length - 2, fieldtochange.length);\n        console.log(\"imagenumber\", imagenumber);\n        console.log(\"fieldtochangeminusnumber\", fieldtochangeminusnumber);\n        let field = document.getElementById('id-unilabeltype-imageboard-imagesettings-' + fieldtochangeminusnumber);\n        console.log(\"field\", field);\n        if (field !== null) {\n            field.value = changedvalue;\n        }\n        return imagenumber;\n    }\n\n    /**\n     *\n     * @param {event} event\n     */\n    function onclickExecute(event) {\n        var targetid = event.target.getAttribute('id');\n        var mform = targetid.split('button-mform1')[1];\n        if (mform) {\n            setTimeout(function() {\n                // An element was added so we have to add a div for the image to the dom.\n                let singleElements = document.querySelectorAll('[id^=\"fitem_id_unilabeltype_imageboard_title_\"]');\n                let number = singleElements.length;\n                addImageToDom(number - 1);\n            }, 500);\n        }\n    }\n\n    /**\n     * Register eventlistener to the all input fields of the form to register\n     * focus-out events from input fields in order to trigger a fresh of the preview.\n     */\n    function registerAllEventlistener() {\n        var mform = document.querySelectorAll('[id^=\"mform\"]')[0];\n        // We register one listener per eventtype to the mform and use the bubble-event-feature to check out\n        // the target of an event.\n\n        // All focusout-events will be handeled by oneListenerForAllInputFocusout.\n        mform.addEventListener(\"focusout\", focusoutExecute, false);\n\n        // All click-events will be handeled by oneListenerForAllInputClick.\n        mform.addEventListener(\"click\", onclickExecute, false);\n\n        // All uploadCompleted-events\n        // mform.addEventListener(eventTypes.uploadCompleted, machwas, false);\n\n        // First: When uploading a backgroundimage the backgroundimage of the backgroundimagediv must be updated.\n        // ToDo: better use eventlistener\n        let backgroundfileNode = document.getElementById('id_unilabeltype_imageboard_backgroundimage_fieldset');\n        if (backgroundfileNode) {\n            let observer = new MutationObserver(refreshBackgroundImage);\n            observer.observe(backgroundfileNode, {attributes: true, childList: true, subtree: true});\n        }\n        // Also add listener for canvas size\n        let canvasx = document.getElementById('id_unilabeltype_imageboard_canvaswidth');\n        if (canvasx) {\n            let observer = new MutationObserver(refreshBackgroundImage);\n            observer.observe(canvasx, {attributes: true, childList: true, subtree: true});\n        }\n        let canvasy = document.getElementById('id_unilabeltype_imageboard_canvasheight');\n        if (canvasy) {\n            let observer = new MutationObserver(refreshBackgroundImage);\n            observer.observe(canvasy, {attributes: true, childList: true, subtree: true});\n        }\n    }\n\n    /**\n     * Sets the background image of the SVG to the current image in filemanager.\n     */\n    function refreshBackgroundImage() {\n        let filemanagerbackgroundimagefieldset = document.getElementById('id_unilabeltype_imageboard_backgroundimage_fieldset');\n        let previewimage = filemanagerbackgroundimagefieldset.getElementsByClassName('realpreview');\n        let backgrounddiv = document.getElementById('unilabel-imageboard-background-canvas');\n\n        if (previewimage.length > 0) {\n            let backgroundurl = previewimage[0].getAttribute('src').split('?')[0];\n            // If the uploaded file reuses the filename of a previously uploaded image, they differ\n            // only in the oid. So one has to append the oid to the url.\n            if (previewimage[0].getAttribute('src').split('?')[1].includes('&oid=')) {\n                backgroundurl += '?oid=' + previewimage[0].getAttribute('src').split('&oid=')[1];\n            }\n            backgrounddiv.style.background = 'red'; // ToDo: Do wie need this code? Just to indicate changes during dev.\n            backgrounddiv.style.backgroundSize = 'cover';\n            backgrounddiv.style.backgroundImage = \"url('\" + backgroundurl + \"')\";\n\n            const canvaswidthinput = document.getElementById('id_unilabeltype_imageboard_canvaswidth');\n            let canvaswidthselected = canvaswidthinput.selectedOptions;\n            let canvaswidth = canvaswidthselected[0].value;\n            backgrounddiv.style.width = canvaswidth + \"px\";\n\n            const canvasheightinput = document.getElementById('id_unilabeltype_imageboard_canvasheight');\n            let canvasheightselected = canvasheightinput.selectedOptions;\n            let canvasheight = canvasheightselected[0].value;\n            backgrounddiv.style.height = canvasheight + \"px\";\n        } else {\n            // Image might be deleted so update the backroundidv and remove backgroundimage in preview;\n            // ToDo    if (previewimage.length > 0) does not recognize when an image is deleted so we need a different condition!\n            backgrounddiv.style.background = 'green'; // Todo: check if this is needed. just to indicate changes during development.\n            backgrounddiv.style.backgroundImage = \"url('')\";\n            const canvaswidthinput = document.getElementById('id_unilabeltype_imageboard_canvaswidth');\n            let canvaswidthselected = canvaswidthinput.selectedOptions;\n            let canvaswidth = canvaswidthselected[0].value;\n            backgrounddiv.style.width = canvaswidth + \"px\";\n\n            const canvasheightinput = document.getElementById('id_unilabeltype_imageboard_canvasheight');\n            let canvasheightselected = canvasheightinput.selectedOptions;\n            let canvasheight = canvasheightselected[0].value;\n            backgrounddiv.style.height = canvasheight + \"px\";\n        }\n    }\n\n\n    /**\n     *\n     * @param {number} canvaswidth\n     * @param {number} canvasheight\n     * @param {string} gridcolor\n     * @param {number} xsteps\n     * @param {number} ysteps\n     */\n    function renderHelpergrid(canvaswidth, canvasheight, gridcolor, xsteps, ysteps) {\n        let helpergrids = [];\n        for (let y = 0; y < canvasheight; y = y + ysteps) {\n            for (let x = 0; x < canvaswidth; x = x + xsteps) {\n                let helpergrid = {};\n                helpergrid.x = x;\n                helpergrid.y = y;\n                helpergrids.push(helpergrid);\n            }\n        }\n        // In preview only one helpergrid exists .... we use cmid = 0.\n        const context = {\n            // Data to be rendered\n            helpergrids: helpergrids,\n            gridcolor: gridcolor,\n            xsteps: xsteps,\n            ysteps: ysteps,\n            cmid: 0,\n            hidden: 0\n        };\n\n        Templates.renderForPromise('unilabeltype_imageboard/imageboard_helpergridpreview', context).then(({html, js}) => {\n            // We have to get the actual content, combine it with the rendered image and replace then the actual content.\n            let imageboardcontainer = document.getElementById('imageboardcontainer').innerHTML;\n            let combined = \"<div>\" + imageboardcontainer + \"</div>\" + html;\n            Templates.replaceNodeContents('#imageboardcontainer', combined, js);\n            // ToDo: Check.\n            return;\n        }).catch(() => {\n            log.debug('Rendering failed');\n        });\n    }\n\n\n    /**\n     * Gets the number of ALL elements in the form and then adds a div for each element to the dom if not already exists.\n     * We need a timeout\n     */\n    function refreshAllImages() {\n        const singleElements = document.querySelectorAll('[id^=\"fitem_id_unilabeltype_imageboard_image_\"]');\n        for (let i = 0; i < singleElements.length; i++) {\n            // Todo: Skip removed elements that are still in the dom but hidden.\n            let singleElement = singleElements[i].getAttribute('id');\n            let number = singleElement.split('fitem_id_unilabeltype_imageboard_image_')[1];\n            // Check if there exists already a div for this image.\n            const imageid = document.getElementById('unilabel-imageboard-imageid-' + number);\n            if (imageid === null) {\n                // Div does not exist so we need do add it do dom.\n                addImageToDom(number);\n                // ToDo: Do we need a timeout to wait until the dic was added so that refresh can work correctly?\n                // see also refreshImage ... there is already a timeout\n                setTimeout(function() {\n                    refreshImage(number);\n                }, 1000);\n            } else {\n                refreshImage(number);\n            }\n        }\n    }\n\n    /**\n     *\n     * @param {int} number\n     */\n    function addImageToDom(number) {\n        const imageid = document.getElementById('unilabel-imageboard-imageid-' + number);\n        if (imageid === null) {\n            renderAddedImage(number);\n            // This div does not exist so we need do add it do dom.\n            // Add an obverser to be able to update if image is uploaded.\n            let imagefileNode = document.getElementById('fitem_id_unilabeltype_imageboard_image_' + (number));\n            if (imagefileNode) {\n                let observer = new MutationObserver(refreshImage);\n                observer.observe(imagefileNode, {attributes: true, childList: true, subtree: true});\n            }\n        } else {\n            // Div already exists so we need only to refresh the image because we only uploaded a new image\n            // to an already existing div.\n            refreshImage(number);\n        }\n    }\n\n    /**\n     *\n     * @param {number} number of\n     */\n    function renderAddedImage(number) {\n        const context = {\n            // Data to be rendered\n            number: number,\n            title: \"title\"\n        };\n\n        Templates.renderForPromise('unilabeltype_imageboard/previewimage', context).then(({html, js}) => {\n            // We have to get the actual content, combine it with the rendered image and replace then the actual content.\n            let imageboardcontainer = document.getElementById('imageboardcontainer').innerHTML;\n            let combined = \"<div>\" + imageboardcontainer + \"</div>\" + html;\n            Templates.replaceNodeContents('#imageboardcontainer', combined, js);\n            return;\n        }).catch(() => {\n            // No tiny editor present.\n        });\n    }\n\n    /**\n     * If an image was uploaded or inputfields in the form changed then we need to refresh\n     * this image.\n     * @param {int} number\n     */\n    function refreshImage(number) {\n        // When there was an upload, then the number is NOT a number.\n        // ToDo: Do not yet know the best way how I will get the number in his case.\n        // For now if it is a number the normal refresh can be used and only ONE image will be refreshed.\n        // In the else code ther will be a refresh of ALL images until I can refactor this.\n        if (!Array.isArray(number)) {\n            let imageid = document.getElementById(\"unilabel-imageboard-imageid-\" + number);\n            // Fill all the needed values for imagedata.\n            let imagedata = getAllImagedataFromForm(number);\n            imageid.style.background = imagedata.titlebackgroundcolor;\n            imageid.src = imagedata.src;\n\n            if (imagedata.src === \"\") {\n                // Hide the image div.\n                imageid.classList.add(\"hidden\");\n            } else {\n                imageid.classList.remove(\"hidden\");\n                imageid.alt = imagedata.alt;\n            }\n\n            const imagediv = document.getElementById('unilabel-imageboard-element-' + number);\n            imagediv.style.left = parseInt(imagedata.xposition) + \"px\";\n            imagediv.style.top = parseInt(imagedata.yposition) + \"px\";\n\n            // Switch to the correct class eg \"unilable-imageboard-titlelineheight-4 if lineheight = 4.\n            const idelementtitle = document.getElementById('id_elementtitle-' + number);\n            idelementtitle.classList.remove(\"unilable-imageboard-titlelineheight-0\");\n            idelementtitle.classList.remove(\"unilable-imageboard-titlelineheight-1\");\n            idelementtitle.classList.remove(\"unilable-imageboard-titlelineheight-2\");\n            idelementtitle.classList.remove(\"unilable-imageboard-titlelineheight-3\");\n            idelementtitle.classList.remove(\"unilable-imageboard-titlelineheight-4\");\n            idelementtitle.classList.remove(\"unilable-imageboard-titlelineheight-5\");\n            const dummy = \"unilable-imageboard-titlelineheight-\" + imagedata.titlelineheight;\n            idelementtitle.classList.add(dummy);\n\n            if (imagedata.targetwidth != 0) {\n                imageid.style.width = imagedata.targetwidth + \"px\";\n            } else {\n                imageid.style.width = \"auto\";\n            }\n            if (imagedata.targetheight != 0) {\n                imageid.style.height = imagedata.targetheight + \"px\";\n            } else {\n                imageid.style.height = \"auto\";\n            }\n            if (imagedata.title != \"\") {\n                imageid.title = (parseInt(number) + 1) + \": \" + imagedata.title;\n            } else {\n                imageid.title = (parseInt(number) + 1) + \": \";\n            }\n            if (imagedata.border != 0) {\n                imageid.style.border = imagedata.border + \"px solid\";\n                imageid.style.borderColor = imagedata.titlebackgroundcolor;\n            } else {\n                imageid.style.border = \"0\";\n            }\n            if (imagedata.borderradius != 0) {\n                imageid.style.borderRadius = imagedata.borderradius + \"px\";\n            } else {\n                imageid.style.borderRadius = \"0\";\n            }\n\n            // Title above image.\n            const elementtitle = document.getElementById('id_elementtitle-' + number);\n            elementtitle.innerHTML = imagedata.title;\n            elementtitle.style.color = imagedata.titlecolor;\n            elementtitle.style.backgroundColor = imagedata.titlebackgroundcolor;\n            elementtitle.style.fontSize = imagedata.fontsize + \"px\";\n            elementtitle.style.borderRadius = imagedata.borderradius + \"px\";\n        } else {\n            setTimeout(function() {\n                refreshAllImages();\n            }, 600);\n        }\n    }\n\n    /**\n     * Get all data from image that is stored in the form and collects them in one array.\n     *\n     * @param {int} number of the image\n     * @returns {*[]} Array with the collected information that are set in the form for the image.\n     */\n    function getAllImagedataFromForm(number) {\n        let imageids = {\n            title: 'id_unilabeltype_imageboard_title_' + number,\n            titlecolor: 'id_unilabeltype_imageboard_titlecolor_colourpicker',\n            titlebackgroundcolor: 'id_unilabeltype_imageboard_titlebackgroundcolor_colourpicker',\n            titlelineheight: 'id_unilabeltype_imageboard_titlelineheight',\n            fontsize: 'id_unilabeltype_imageboard_fontsize',\n            alt: 'id_unilabeltype_imageboard_alt_' + number,\n            xposition: 'id_unilabeltype_imageboard_xposition_' + number,\n            yposition: 'id_unilabeltype_imageboard_yposition_' + number,\n            targetwidth: 'id_unilabeltype_imageboard_targetwidth_' + number,\n            targetheight: 'id_unilabeltype_imageboard_targetheight_' + number,\n            src: '',\n            border: 'id_unilabeltype_imageboard_border_' + number,\n            borderradius: 'id_unilabeltype_imageboard_borderradius_' + number,\n            coordinates: \"unilabel-imageboard-coordinates-\" + number,\n        };\n\n        let imagedata = {};\n        imagedata.title = document.getElementById(imageids.title).value;\n        imagedata.titlecolor = document.getElementById(imageids.titlecolor).value;\n        imagedata.titlebackgroundcolor = document.getElementById(imageids.titlebackgroundcolor).value;\n        imagedata.titlelineheight = document.getElementById(imageids.titlelineheight).value;\n        imagedata.fontsize = document.getElementById(imageids.fontsize).value;\n        imagedata.alt = document.getElementById(imageids.alt).value;\n        imagedata.xposition = document.getElementById(imageids.xposition).value;\n        imagedata.yposition = document.getElementById(imageids.yposition).value;\n        imagedata.targetwidth = document.getElementById(imageids.targetwidth).value;\n        imagedata.targetheight = document.getElementById(imageids.targetheight).value;\n\n        // Get the src of the draftfile.\n        const element = document.getElementById('id_unilabeltype_imageboard_image_' + number + '_fieldset');\n        const imagetag = element.getElementsByTagName('img');\n        let src = '';\n        if (imagetag.length && imagetag.length != 0) {\n            src = imagetag[0].src;\n            src = src.split('?')[0];\n        }\n        imagedata.src = src;\n        imagedata.border = document.getElementById(imageids.border).value;\n        imagedata.borderradius = document.getElementById(imageids.borderradius).value;\n\n        let div = document.getElementById(imageids.coordinates);\n        if (imagedata.xposition === \"\") {\n            // If an element was added the coordinates are empty ...\n            imagedata.xposition = 0;\n        }\n        if (imagedata.yposition === \"\") {\n            imagedata.yposition = 0;\n        }\n        div.innerHTML = (parseInt(number) + 1) + \": \" + imagedata.xposition + \" / \" + imagedata.yposition;\n        return imagedata;\n    }\n};\n"],"names":["canvaswidth","canvasheight","gridcolor","xsteps","ysteps","parseInt","mform","document","querySelectorAll","addEventListener","focusoutExecute","onclickExecute","backgroundfileNode","getElementById","MutationObserver","refreshBackgroundImage","observe","attributes","childList","subtree","canvasx","canvasy","registerAllEventlistener","setTimeout","refreshAllImages","helpergrids","y","x","helpergrid","push","context","cmid","hidden","renderForPromise","then","_ref","html","js","combined","innerHTML","replaceNodeContents","catch","debug","renderHelpergrid","gridtoggler","togglerText","querySelector","event","console","log","imagenumber","eventid","target","getAttribute","eventsourceimagesetting","split","eventsourceform","value","num","Number","isInteger","field","updateForm","fieldtochange","changedvalue","fieldtochangeminusnumber","substr","length","updateImagesetting","refreshImage","addImageToDom","previewimage","getElementsByClassName","backgrounddiv","backgroundurl","includes","style","background","backgroundSize","backgroundImage","selectedOptions","width","height","singleElements","i","number","title","_ref2","renderAddedImage","imagefileNode","Array","isArray","imageid","imagedata","imageids","titlecolor","titlebackgroundcolor","titlelineheight","fontsize","alt","xposition","yposition","targetwidth","targetheight","src","border","borderradius","coordinates","imagetag","getElementsByTagName","div","getAllImagedataFromForm","classList","add","remove","imagediv","left","top","idelementtitle","dummy","borderColor","borderRadius","elementtitle","color","backgroundColor","fontSize","stopPropagation","preventDefault","contains","button","Str","get_string","done","text","innerText","showGrid","hideGrid"],"mappings":"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"}