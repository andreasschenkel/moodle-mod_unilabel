{"version":3,"file":"imageboarddraganddrop.min.js","sources":["../src/imageboarddraganddrop.js"],"sourcesContent":["/**\n * Unilabel type imageboard\n *\n * @author      Andreas Schenkel\n * @copyright   Andreas Schenkel {@link https://github.com/andreasschenkel}\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n// import log from 'core/log';\n\nexport const init = () => {\n    // Create an array selectedImage to be able to store some data about the selected image that is moved.\n    let selectedImage = {};\n    selectedImage.number = null;\n    selectedImage.number = null;\n    selectedImage.src = '';\n    // ItemToMove is the div that the selected image is inside AND the title. We do NOT move the image we move the itemtomove-div.\n    selectedImage.itemToMove = null;\n    // ToDo: Add documentation about xoffset?\n    selectedImage.eventlayerX = 0;\n    selectedImage.eventlayerY = 0;\n    selectedImage.width = null;\n    selectedImage.height = null;\n    selectedImage.titlecorrectorX = 0;\n    selectedImage.titlecorrectorY = 0;\n\n    // Store the data about the canvas/background.\n    let canvas = null;\n    let canvaswidth = 950;\n    let canvasheight = 400;\n\n    registerDnDListener();\n\n    /**\n     *  We need two event listeners for drag and drop. One when the dragging starts and one when it ends.\n     */\n    function registerDnDListener() {\n        setTimeout(function() {\n            canvas = document.getElementById(\"unilabel-imageboard-background-canvas\");\n            canvas.addEventListener(\"mousedown\", mouseDown, false);\n            canvas.addEventListener(\"dragstart\", dragStart, false);\n            canvas.addEventListener(\"dragend\", dragEnd, false);\n        }, 1000);\n    }\n    /**\n     *\n     * @param {event} event\n     */\n    function mouseDown(event) {\n        if (event && event.target && event.target.id === 'imagesettingstoggler') {\n            console.log('toggle settings');\n            let imagesettingsdiv = document.getElementById(\"id-unilabeltype-imageboard-imagesettings\");\n            imagesettingsdiv.style.visibility = 'hidden';\n        }\n    }\n\n    /**\n     *\n     * @param {event} event\n     */\n    function dragStart(event) {\n        // Check if title or image is selected because this leads to different offsets.\n        // We have to do different calculation of x and y position.\n        let selectedType = \"nix\";\n        if (event &&\n            event.explicitOriginalTarget &&\n            event.explicitOriginalTarget.classList &&\n            event.explicitOriginalTarget.classList.contains('unilabel-imageboard-image')) {\n            selectedType = \"image\";\n        } else {\n            selectedType = \"title\";\n        }\n        // ToDo: Check this condition ....  shouldnt it check         selectedType = \"image\"\n        if (event && event.target && event.target.classList.contains('unilabel-imageboard-element-draggable')) {\n            let imagesettingsdiv = document.getElementById(\"id-unilabeltype-imageboard-imagesettings\");\n            imagesettingsdiv.style.visibility = 'hidden';\n\n            // Image was selected, so we have to store the information about this image.\n            // 1. Get the number of the selected element.\n            let number = event.target.getAttribute('id').split('unilabel-imageboard-element-')[1];\n            // 2. Get imagedata of the selected element.\n            let imagedata = getAllImagedataFromForm(number);\n            // 3. Set the number of the selected image so this image can be updated when dragEnds.\n            selectedImage.number = number;\n            // 4. Collect the other information.\n            selectedImage.title = imagedata.title;\n            selectedImage.titlelineheight = imagedata.titlelineheight;\n            selectedImage.fontsize = imagedata.fontsize;\n            selectedImage.width = imagedata.targetwidth;\n            selectedImage.height = imagedata.targetheight;\n            selectedImage.border = imagedata.border;\n            selectedImage.borderradius = imagedata.borderradius;\n            selectedImage.itemToMove = document.getElementById('unilabel-imageboard-element-' + selectedImage.number);\n            // Attention: layerX and layerY is the relative position of the mouseposition inside div.\n            // So div is the image or the title and the layer depends on this according to the complete element.\n            selectedImage.eventlayerX = event.layerX;\n            selectedImage.eventlayerY = event.layerY;\n            if (selectedType == \"title\") {\n                // If a title is selected then the position is relative to the upper left corner of the title. Thus we\n                // have to use a correction-value because we store the coordinates that belong to the image.\n                selectedImage.titlecorrectorY = selectedImage.fontsize * selectedImage.titlelineheight;\n            } else {\n                selectedImage.titlecorrectorY = 0;\n            }\n        }\n    }\n\n    /**\n     * At the end of drag update the inputfield and set the coordinates into the attribute of the image.\n     *\n     * @param {event} event\n     */\n    function dragEnd(event) {\n        let snap = 1;\n        let snapelement = document.getElementById('unilabeltype-imageboard-snap');\n        if (snapelement !== null && Number.isInteger(Number(snapelement.value))) {\n            snap = snapelement.value;\n        }\n        if (selectedImage.number !== null) {\n            // Information: snap is an integer and allows to use an snapping grid.\n            // xposition = 123 with snap 10 will be calculated to 120.\n            // xposition = 123 with snap 100 will be calculated to 10.\n            let xposition = calculateXposition(event, snap);\n            let yposition = calculateYposition(event, snap);\n\n            // Den Imagesettings-Dialog neben dem Mauszeiger anzeigen.\n            showimagesettingsdiv();\n\n            // Die mform aktiasieren;\n            updateform(selectedImage.number, xposition, yposition);\n            // Den Imagesettings-Anzeigebereich aktualisieren\n            updateimagesettings(selectedImage, xposition, yposition);\n\n            // Update the Position of the image\n            selectedImage.itemToMove.style.left = xposition + selectedImage.titlecorrectorX + \"px\";\n            selectedImage.itemToMove.style.top = parseInt(yposition) + parseInt(selectedImage.titlecorrectorY) + \"px\";\n\n            let coordinates = document.getElementById('unilabel-imageboard-coordinates-' + selectedImage.number);\n            coordinates.innerHTML = (parseInt(selectedImage.number) + 1) + \": \" +\n                xposition + \" / \" + yposition;\n\n            // Reset saved image data\n            selectedImage.number = null;\n            selectedImage.titlecorrectorY = 0;\n        }\n    }\n\n    /**\n     *\n     */\n    function showimagesettingsdiv() {\n        let imagesettingsdiv = document.getElementById(\"id-unilabeltype-imageboard-imagesettings\");\n        let canvasboundings = canvas.getBoundingClientRect();\n        const offsetX = event.clientX - canvasboundings.left;\n        const offsetY = event.clientY - canvasboundings.top;\n        imagesettingsdiv.style.left = offsetX + \"px\";\n        imagesettingsdiv.style.top = offsetY + \"px\";\n        imagesettingsdiv.style.visibility = 'visible';\n    }\n\n    /**\n     *\n     * @param {number} number\n     * @param {string} xposition\n     * @param {string} yposition\n     */\n    function updateform(number, xposition, yposition) {\n        // Change the inputfield in form.\n        const inputPositionX = document.getElementById('id_unilabeltype_imageboard_xposition_' + (selectedImage.number));\n        inputPositionX.value = xposition;\n\n        const inputPositionY = document.getElementById('id_unilabeltype_imageboard_yposition_' + (selectedImage.number));\n        inputPositionY.value = parseInt(yposition) + parseInt(selectedImage.titlecorrectorY);\n    }\n\n    /**\n     * Call this function after drag and drop end or if input fields in form where changed.\n     * @param {selectedImage} selectedImage image that was changed\n     * @param {xposition} xposition\n     * @param {yposition} yposition\n     */\n    function updateimagesettings(selectedImage, xposition, yposition) {\n\n        // Den Imagesettings-Anzeigebereich aktualisieren\n        const imagesettingsNumber = document.getElementById('id-unilabeltype-imageboard-imagesettings-number');\n        imagesettingsNumber.innerHTML = (parseInt(selectedImage.number) + 1);\n\n        const imagesettingsTitle = document.getElementById('id-unilabeltype-imageboard-imagesettings-title');\n        imagesettingsTitle.value = selectedImage.title;\n\n        const imagesettingsInputPositionX = document.getElementById('id-unilabeltype-imageboard-imagesettings-xposition');\n        imagesettingsInputPositionX.value = parseInt(xposition) + parseInt(selectedImage.titlecorrectorX);\n        const imagesettingsInputPositionY = document.getElementById('id-unilabeltype-imageboard-imagesettings-yposition');\n        imagesettingsInputPositionY.value = parseInt(yposition) + parseInt(selectedImage.titlecorrectorY);\n        const imagesettingsInputBorder = document.getElementById('id-unilabeltype-imageboard-imagesettings-border');\n        imagesettingsInputBorder.value = parseInt(selectedImage.border);\n\n        const imagesettingsInputBorderradius = document.getElementById('id-unilabeltype-imageboard-imagesettings-borderradius');\n        imagesettingsInputBorderradius.value = parseInt(selectedImage.borderradius);\n    }\n\n    /**\n     * Get all data from image that is stored in the form and collects them in one array.\n     *\n     * @param {int} number of the image\n     * @returns {*[]} Array with the collected information that are set in the form for the image.\n     */\n    function getAllImagedataFromForm(number) {\n        let imageids = {\n            title: 'id_unilabeltype_imageboard_title_' + number,\n            titlecolor: 'id_unilabeltype_imageboard_titlecolor_colourpicker',\n            titlebackgroundcolor: 'id_unilabeltype_imageboard_titlebackgroundcolor_colourpicker',\n            titlelineheight: 'id_unilabeltype_imageboard_titlelineheight',\n            fontsize: 'id_unilabeltype_imageboard_fontsize',\n            xposition: 'id_unilabeltype_imageboard_xposition_' + number,\n            yposition: 'id_unilabeltype_imageboard_yposition_' + number,\n            targetwidth: 'id_unilabeltype_imageboard_targetwidth_' + number,\n            targetheight: 'id_unilabeltype_imageboard_targetheight_' + number,\n            src: '',\n            border: 'id_unilabeltype_imageboard_border_' + number,\n            borderradius: 'id_unilabeltype_imageboard_borderradius_' + number,\n        };\n\n        let imagedata = {};\n        imagedata.title = document.getElementById(imageids.title).value;\n        imagedata.titlecolor = document.getElementById(imageids.titlecolor).value;\n        imagedata.titlebackgroundcolor = document.getElementById(imageids.titlebackgroundcolor).value;\n        imagedata.titlelineheight = document.getElementById(imageids.titlelineheight).value;\n        imagedata.fontsize = document.getElementById(imageids.fontsize).value;\n        imagedata.xposition = document.getElementById(imageids.xposition).value;\n        imagedata.yposition = document.getElementById(imageids.yposition).value;\n        imagedata.targetwidth = document.getElementById(imageids.targetwidth).value;\n        imagedata.targetheight = document.getElementById(imageids.targetheight).value;\n\n        // Src der Draftfile ermitteln.\n        const element = document.getElementById('id_unilabeltype_imageboard_image_' + number + '_fieldset');\n        const imagetag = element.getElementsByTagName('img');\n        let src = '';\n        if (imagetag.length && imagetag.length != 0) {\n            src = imagetag[0].src;\n            src = src.split('?')[0];\n        }\n        imagedata.src = src;\n        imagedata.border = document.getElementById(imageids.border).value;\n        imagedata.borderradius = document.getElementById(imageids.borderradius).value;\n\n        return imagedata;\n    }\n\n    /**\n     *\n     * @param {event} event\n     * @param {int} snap\n     * @returns {number}\n     */\n    function calculateXposition(event, snap) {\n        let canvasboundings = canvas.getBoundingClientRect();\n        let xposition = event.clientX - canvasboundings.left - selectedImage.eventlayerX;\n\n        if (xposition < 0) {\n            xposition = 0;\n        }\n        if (xposition >= canvaswidth - selectedImage.width) {\n            xposition = canvaswidth - selectedImage.width;\n        }\n        return Math.round(xposition / snap) * snap;\n    }\n\n    /**\n     *\n     * @param {event} event\n     * @param {int} snap\n     * @returns {number}\n     */\n    function calculateYposition(event, snap) {\n        var canvasboundings = canvas.getBoundingClientRect();\n        var yposition = event.clientY - canvasboundings.top - selectedImage.eventlayerY;\n        if (yposition < 0) {\n            yposition = 0;\n        }\n        if (yposition >= canvasheight - selectedImage.height) {\n            yposition = canvasheight - selectedImage.height;\n        }\n        return Math.round(yposition / snap) * snap;\n    }\n};\n"],"names":["selectedImage","number","src","itemToMove","eventlayerX","eventlayerY","width","height","titlecorrectorX","titlecorrectorY","canvas","mouseDown","event","target","id","console","log","document","getElementById","style","visibility","dragStart","selectedType","explicitOriginalTarget","classList","contains","getAttribute","split","imagedata","imageids","title","titlecolor","titlebackgroundcolor","titlelineheight","fontsize","xposition","yposition","targetwidth","targetheight","border","borderradius","value","imagetag","getElementsByTagName","length","getAllImagedataFromForm","layerX","layerY","dragEnd","snap","snapelement","Number","isInteger","canvasboundings","getBoundingClientRect","clientX","left","Math","round","calculateXposition","clientY","top","calculateYposition","showimagesettingsdiv","parseInt","updateform","innerHTML","updateimagesettings","imagesettingsdiv","offsetX","offsetY","setTimeout","addEventListener"],"mappings":"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"}