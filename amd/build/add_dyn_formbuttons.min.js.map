{"version":3,"file":"add_dyn_formbuttons.min.js","sources":["../src/add_dyn_formbuttons.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n\n/**\n * @author     Andreas Grabs <moodle@grabs-edv.de>\n * @copyright  2024 Andreas Grabs\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ContentLoader from 'mod_unilabel/contentloader';\nimport Templates from 'core/templates';\nimport {exception as displayException} from 'core/notification';\nimport log from 'core/log';\n\nlet _formid;\nlet _type;\nlet _elements;\nlet _editorelements;\n\n/**\n * Register the del button and get the html from mustache.\n *\n * @param {Element} headerelement The draggable header element\n * @param {Integer} index The index of the headerelement\n * @returns {Promise}\n */\nconst registerActionButtons = (headerelement, index) => {\n    const context = {\n        type: _type,\n        repeatindex: index,\n        repeatnr: (index + 1),\n    };\n    return Templates.renderForPromise('mod_unilabel/element_action_buttons', context)\n    .then(({html, js}) => {\n        headerelement.querySelector('div.d-flex').insertAdjacentHTML(\n            'beforeend', html\n        );\n        Templates.runTemplateJS(js);\n        return;\n    }).catch((error) => displayException(error));\n};\n\n/**\n * Delete an element and set dummy hidden elements with \"0\" value, what is needed by the mform.\n *\n * @param {Integer} index The index of the deleted element\n */\nconst delElement = (index) => {\n    var headerelement = document.querySelector('#id_singleelementheader_' + index);\n    if (headerelement) {\n        headerelement.remove();\n    }\n    var thisform = document.querySelector('#' + _formid);\n    var myparent = document.querySelector('#id_unilabelcontenthdr');\n    if (myparent) {\n        var newelement;\n        _elements.forEach((element) => {\n            let name = 'unilabeltype_' + _type + '_' + element + '[' + index + ']';\n            log.debug('Set dummy element ' + name);\n            newelement = document.createElement('input');\n            newelement.type = 'hidden';\n            newelement.name = name;\n            newelement.value = '';\n            myparent.insertAdjacentElement('afterbegin', newelement);\n        });\n        _editorelements.forEach((element) => {\n            let name;\n            name = 'unilabeltype_' + _type + '_' + element + '[' + index + '][text]';\n            log.debug('Set dummy editorelement-text ' + name);\n            newelement = document.createElement('input');\n            newelement.type = 'hidden';\n            newelement.name = name;\n            newelement.value = '';\n            myparent.insertAdjacentElement('afterbegin', newelement);\n\n            name = 'unilabeltype_' + _type + '_' + element + '[' + index + '][format]';\n            log.debug('Set dummy editorelement-format ' + name);\n            newelement = document.createElement('input');\n            newelement.type = 'hidden';\n            newelement.name = name;\n            newelement.value = 1;\n            myparent.insertAdjacentElement('afterbegin', newelement);\n\n            name = 'unilabeltype_' + _type + '_' + element + '[' + index + '][itemid]';\n            log.debug('Set dummy editorelement-itemid ' + name);\n            newelement = document.createElement('input');\n            newelement.type = 'hidden';\n            newelement.name = name;\n            newelement.value = 0;\n            myparent.insertAdjacentElement('afterbegin', newelement);\n        });\n        const myevent = new CustomEvent('itemremoved', {detail: index});\n        thisform.dispatchEvent(myevent);\n    }\n};\n\n/**\n * Export our init method.\n *\n * @param {string} type The type of unilabeltype e.g.: grid\n * @param {string} formid The id of the mform the draggable elements are related to\n * @param {Integer} contextid\n * @param {Integer} courseid\n * @param {string} prefix\n * @param {array} elements The dummy fields we need if we want to delete an element\n * @param {array} editorelements The same as element but for editor which has subelements like \"text\", \"format\" and \"itemid\"\n */\nexport const init = (type, formid, contextid, courseid, prefix, elements, editorelements) => {\n    _type = type;\n    _formid = formid;\n    _elements = elements;\n    _editorelements = editorelements;\n\n    // Register a click for the whole form but only applying to the delButtons.\n    var thisform = document.querySelector('#' + formid);\n    thisform.addEventListener('click', (e) => {\n        if (e.target.dataset.action == 'deleteelement') {\n            var index = e.target.dataset.id;\n            log.debug('Deleting element: ' + index);\n            delElement(index);\n        }\n    });\n\n    // Look for the header elements and add and register a delete button.\n    var headerelements = document.querySelectorAll('fieldset[id^=\"id_singleelementheader\"]');\n    for (var i = 0; i < headerelements.length; i++) {\n        var headerelement = headerelements[i];\n        log.debug('looking for: ' + headerelement.id);\n        registerActionButtons(headerelement, i);\n    }\n\n    var button = document.querySelector('#button-' + formid);\n    if (button) {\n        var repeatbutton = document.querySelector('#fitem_id_' + prefix + 'add_more_elements_btn');\n        if (repeatbutton) {\n            repeatbutton.remove();\n        }\n        button.addEventListener('click', (e) => {\n            var contentcontainerselector = '#addcontent-' + formid;\n            var fragmentcall = 'get_html';\n            var serviceparams = {\n                'type': type,\n                'contextid': contextid,\n                'formid': formid,\n                'courseid': courseid,\n                'prefix': prefix\n            };\n\n            var repeatindex = parseInt(e.target.form.multiple_chosen_elements_count.value);\n            e.target.form.multiple_chosen_elements_count.value = repeatindex + 1;\n            serviceparams.repeatindex = repeatindex;\n            log.debug(serviceparams);\n\n            var contentLoader = new ContentLoader(contentcontainerselector, fragmentcall, serviceparams, contextid);\n            contentLoader.loadContent('beforebegin').then(() => {\n                const myevent = new CustomEvent('itemadded', {detail: repeatindex});\n                thisform.dispatchEvent(myevent);\n                return true;\n            }).catch((error) => displayException(error));\n        });\n    }\n};\n"],"names":["_formid","_type","_elements","_editorelements","registerActionButtons","headerelement","index","context","type","repeatindex","repeatnr","Templates","renderForPromise","then","_ref","html","js","querySelector","insertAdjacentHTML","runTemplateJS","catch","error","formid","contextid","courseid","prefix","elements","editorelements","thisform","document","addEventListener","e","target","dataset","action","id","debug","remove","myparent","newelement","forEach","element","name","createElement","value","insertAdjacentElement","myevent","CustomEvent","detail","dispatchEvent","delElement","headerelements","querySelectorAll","i","length","button","repeatbutton","contentcontainerselector","serviceparams","parseInt","form","multiple_chosen_elements_count","ContentLoader","loadContent"],"mappings":"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"}